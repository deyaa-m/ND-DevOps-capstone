##
# Python CircleCI 2.0 configuration file
#
version: 2.1
workflows:
  flask:
    jobs:
      - build
      - dockerize:
          requires: [build]
      #- provision
      #   requires: [dockerize]
      - update:
         requires: [dockerize]
      #- validate:
      #   requires: [update]
      #- cleanup:
      #   requires: [validate]

jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: python:3.7.3-stretch

    working_directory: /app

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            #pip install -r requirements.txt
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            chmod +x /bin/hadolint
#      - save_cache:
#          paths:
#            - ./venv
#          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lints!
      - run:
          name: run lint
          command: |
            make lint

  dockerize:
    machine: true
    environment:
      ecr: 135834287615.dkr.ecr.eu-west-2.amazonaws.com
    steps:
      - checkout
      - run:
          name: install aws
          command: sudo apt update && sudo apt install awscli -y
      - run: |
          pass=$(aws ecr get-login | sed 's/-e none//g')
          $pass
          docker build -t ${ecr}/flask:${CIRCLE_WORKFLOW_ID:0:6} .
          docker push ${ecr}/flask:${CIRCLE_WORKFLOW_ID:0:6}

  update:
    docker:
      - image: python:3.7.3-stretch
    environment:
      kss: s3://capstone-cluster
      cn: capstone-cluster.deyaa.online
    steps:
      - checkout
      - run:
          name: install kops
          command: |
            curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
            chmod +x kops-linux-amd64
            mv kops-linux-amd64 /usr/bin/kops
            kops version
      - run:
          name: install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.20.9/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/bin/kubectl
            kubectl version
      - run:
          name: configure kubectl
          command: |
            kops --state $kss export kubecfg $cn --admin 
            #export KUBECONFIG=~/.kube/config
      - run:
          name: create new Deployment
          command: kubectl set image deployment/flask-app flask=135834287615.dkr.ecr.eu-west-2.amazonaws.com/flask:${CIRCLE_WORKFLOW_ID:0:6}