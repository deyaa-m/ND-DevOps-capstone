apiVersion: kops.k8s.io/v1alpha2
kind: Cluster
metadata:
  name: {{ .clusterName }}.{{ .dns }}
spec:
  api:
    dns: {}
  authorization:
    rbac: {}
  channel: stable    
  cloudProvider: aws
  configBase: s3://{{ .s3Bucket }}
  dnsZone: {{ .dns }}
  kubernetesVersion: 1.21.1
  etcdClusters:
  - name: main
    memoryRequest: 100Mi
    cpuRequest: 200m
    etcdMembers:
    - encryptedVolume: true
      instanceGroup: master-eu-west-2a
      name: a
    - encryptedVolume: true
      instanceGroup: master-eu-west-2b
      name: b
    - encryptedVolume: true
      instanceGroup: master-eu-west-2c
      name: c
  - cpuRequest: 100m
    etcdMembers:
    - encryptedVolume: true
      instanceGroup: master-{{ .awsRegion }}a
      name: a
    - encryptedVolume: true
      instanceGroup: master-eu-west-2b
      name: b
    - encryptedVolume: true
      instanceGroup: master-eu-west-2c
      name: c
    memoryRequest: 100Mi
    name: events
  iam:
    allowContainerRegistry: true
    legacy: false
  kubelet:
    anonymousAuth: false
  kubernetesApiAccess:
  - 0.0.0.0/0
  #kubernetesVersion: 1.21.4
  masterPublicName: api.{{ .clusterName }}.{{ .dns }}  
  sshpublickey: ~/.ssh/ida_rsa.pub
  networkID: {{ .vpcID }}
  networkCIDR: 172.31.0.0/16
  networking:
    kubenet: {}
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  subnets:
  - name: {{.awsRegion}}a
    type: Public
    zone: {{.awsRegion}}a
    cidr: 172.31.48.0/20
  - name: {{.awsRegion}}b
    type: Public
    zone: {{.awsRegion}}b
    cidr: 172.31.64.0/20
  - name: {{.awsRegion}}c
    type: Public
    zone: {{.awsRegion}}c
    cidr: 172.31.80.0/20
  topology:
    dns:
      type: Public
    masters: public
    nodes: public

---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: {{ .clusterName }}.{{ .dns }}
  name: master-{{ .awsRegion }}a
spec:
  machineType: {{ .masterType }}
  maxSize: 2
  minSize: 1
  nodeLabels:
    kops.k8s.io/instancegroup: master-{{ .awsRegion }}a
  role: Master
  subnets:
  - {{.awsRegion}}a
  #- {{.awsRegion}}b
  #- {{.awsRegion}}c

---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: {{ .clusterName }}.{{ .dns }}
  name: ig1
spec:
  machineType: {{ .nodeType }}
  maxSize: {{ .maxSize }}
  minSize: {{ .minSize }}
  nodeLabels:
    kops.k8s.io/instancegroup: node
  role: Node
  subnets:
  - {{.awsRegion}}a
  - {{.awsRegion}}b
  - {{.awsRegion}}c
